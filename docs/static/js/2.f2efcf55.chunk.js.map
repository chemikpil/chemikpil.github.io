{"version":3,"sources":["common/Timer/Timer.jsx","common/Timer/index.js"],"names":["Timer","state","left","_this","props","start","Date","intervalID","incrementTimer","setState","clearInterval","getTimer","timer","sec","Math","floor","min","hours","days","setInterval","this","react_default","a","createElement","className","concat","Component","__webpack_require__","d","__webpack_exports__","common_Timer_Timer"],"mappings":"8KA+DeA,oNA/CXC,MAAQ,CACJC,KAAMC,EAAKC,MAAMC,OAAS,IAAIC,KAC9BC,WAAY,QAehBC,eAAiB,WAAM,IACXN,EAASC,EAAKF,MAAdC,KAEJA,EAAO,EACPC,EAAKM,SAAS,CACVP,KAAMA,EAAO,MAGjBQ,cAAcP,EAAKF,MAAMM,eAIjCI,SAAW,SAACC,GAAD,MAAoB,CAC3BC,IAAKC,KAAKC,MAAMH,GAAS,KAAQ,GACjCI,IAAKF,KAAKC,MAAMH,GAAS,IAAM,GAC/BK,MAAOH,KAAKC,MAAMH,GAAS,IAAM,GACjCM,KAAMJ,KAAKC,MAAMH,EAAQ,yFA3BzB,IAAML,EAAaY,YAAYC,KAAKZ,eAAgB,KAEpDY,KAAKX,SAAS,CACVF,8DAKJG,cAAcU,KAAKnB,MAAMM,6CAuBzB,IAAMK,EAAQQ,KAAKT,SAASS,KAAKnB,MAAMC,MAEvC,OACImB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,GAAAC,OACQb,EAAMM,KADd,SAAAO,OAC0Bb,EAAMK,MADhC,MAAAQ,OAC0Cb,EAAMI,IADhD,MAAAS,OACwDb,EAAMC,IAD9D,aAzCQa,cCfpBC,EAAAC,EAAAC,EAAA,4BAAAC","file":"static/js/2.f2efcf55.chunk.js","sourcesContent":["// @flow\n\nimport React, { Component } from 'react';\n\nimport './Timer.css';\n\ntype PropsType = {\n    timestamp: number\n};\n\ntype StateType = {\n    left: number,\n    intervalID: number\n};\n\nclass Timer extends Component<PropsType, StateType> {\n    state = {\n        left: this.props.start - +new Date(),\n        intervalID: null\n    };\n\n    componentDidMount() {\n        const intervalID = setInterval(this.incrementTimer, 1000);\n\n        this.setState({\n            intervalID\n        });\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.state.intervalID);\n    };\n\n    incrementTimer = () => {\n        const { left } = this.state;\n\n        if (left > 0 ) { \n            this.setState({\n                left: left - 1000\n            });\n        } else {\n            clearInterval(this.state.intervalID);\n        }\n    };\n\n    getTimer = (timer: number) => ({\n        sec: Math.floor(timer /= 1000) % 60,\n        min: Math.floor(timer /= 60) % 60,\n        hours: Math.floor(timer /= 60) % 24,\n        days: Math.floor(timer / 24)\n    });\n\n    render () {\n        const timer = this.getTimer(this.state.left);\n\n        return(\n            <div className='Timer'>\n                {`${timer.days} dni ${timer.hours}h ${timer.min}m ${timer.sec}s`}\n            </div>\n        )\n    };\n}\n\nexport default Timer;\n","export { default } from './Timer';\n"],"sourceRoot":""}